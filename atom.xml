<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZhangHeng&#39;s Blog</title>
  <icon>https://zhangheng18.github.io/icon.png</icon>
  
  <link href="https://zhangheng18.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhangheng18.github.io/"/>
  <updated>2024-07-12T08:07:36.459Z</updated>
  <id>https://zhangheng18.github.io/</id>
  
  <author>
    <name>zhangheng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何抓取安卓手机的Https包 (Magisk + Android 9)</title>
    <link href="https://zhangheng18.github.io/2024/03/18/android-capture-https/"/>
    <id>https://zhangheng18.github.io/2024/03/18/android-capture-https/</id>
    <published>2024-03-18T09:18:13.000Z</published>
    <updated>2024-07-12T08:07:36.459Z</updated>
    
    
    <summary type="html">&lt;p&gt;前提是一台有root的安卓设备,我这里使用&lt;a href=&quot;https://www.ldmnq.com/&quot;&gt;雷电模拟器9&lt;/a&gt; ，整理记录了一份如何抓取安卓手机的Https请求。&lt;/p&gt;</summary>
    
    
    
    <category term="网络" scheme="https://zhangheng18.github.io/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="网络" scheme="https://zhangheng18.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>如何用Python 快速发送1000条网络请求</title>
    <link href="https://zhangheng18.github.io/2024/01/18/python-send-req/"/>
    <id>https://zhangheng18.github.io/2024/01/18/python-send-req/</id>
    <published>2024-01-18T10:37:13.000Z</published>
    <updated>2024-07-12T13:50:36.343Z</updated>
    
    
    <summary type="html">&lt;p&gt;如何使用 Python 最快实现 1000 个 http 请求， 这里做个测试记录 。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Chrome浏览器同一资源多次请求被串行化</title>
    <link href="https://zhangheng18.github.io/2023/08/07/chrome-same-request/"/>
    <id>https://zhangheng18.github.io/2023/08/07/chrome-same-request/</id>
    <published>2023-08-07T10:09:03.000Z</published>
    <updated>2023-08-09T03:07:08.554Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在 &lt;a href=&quot;https://fastapi.tiangolo.com/features&quot;&gt;fastapi&lt;/a&gt; 中执行一段 cpu 密集型代码，在 Edge(Chromium 内核) 浏览器打开两个 tab，同时请求该接口，发现后一个请求会被阻塞，直到前一个请求完成。代码 demo 如下：</summary>
    
    
    
    
    <category term="网络" scheme="https://zhangheng18.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>SQLAlchemy2.0 简明指南</title>
    <link href="https://zhangheng18.github.io/2023/04/20/sqlalchemy/"/>
    <id>https://zhangheng18.github.io/2023/04/20/sqlalchemy/</id>
    <published>2023-04-20T13:41:41.000Z</published>
    <updated>2024-03-29T09:14:37.739Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;python 最知名的数据库 ORM 终于在 23 年 1 月 26 号发布了可用于生产环境的 &lt;a href=&quot;https://www.sqlalchemy.org/blog/2023/01/26/sqlalchemy-2.0.0-released/&quot;&gt;2.0&lt;/a&gt;版本，提供了全新的 ORM 与 Core 层操作，异步支持，更友好的类型提示，性能提升。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>数据库Tips备忘录</title>
    <link href="https://zhangheng18.github.io/2023/01/22/database/"/>
    <id>https://zhangheng18.github.io/2023/01/22/database/</id>
    <published>2023-01-22T11:41:41.000Z</published>
    <updated>2024-07-12T13:58:46.758Z</updated>
    
    
    <summary type="html">&lt;p&gt;PostgreSQL, SQLite, PostGIS Tips 操作备忘录&lt;/p&gt;</summary>
    
    
    
    
    <category term="SQL" scheme="https://zhangheng18.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Python单元测试快速指南</title>
    <link href="https://zhangheng18.github.io/2022/11/17/python-test/"/>
    <id>https://zhangheng18.github.io/2022/11/17/python-test/</id>
    <published>2022-11-17T08:37:13.000Z</published>
    <updated>2023-08-09T05:26:03.660Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;为什么要写单元测试&quot;&gt;&lt;a href=&quot;#为什么要写单元测试&quot; class=&quot;headerlink&quot; title=&quot;为什么要写单元测试&quot;&gt;&lt;/a&gt;为什么要写单元测试&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;减少线上故障，方便重构&lt;/li&gt;
&lt;li&gt;TDD（测试驱动开发）&lt;/li&gt;
&lt;li&gt;难测的代码就是烂代码&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 使用窗口函数 求连续K天保持排名前TopN 的数据</title>
    <link href="https://zhangheng18.github.io/2022/08/11/pgsql-dense-rank/"/>
    <id>https://zhangheng18.github.io/2022/08/11/pgsql-dense-rank/</id>
    <published>2022-08-11T08:37:13.000Z</published>
    <updated>2022-12-29T03:43:29.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;查询学生成绩排名， 找出持续超过 3 天 排名前 2 的同学&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;思路分析&quot;&gt;&lt;a href=&quot;#思路分析&quot; class=&quot;headerlink&quot; title=&quot;思路分析&quot;&gt;&lt;/a&gt;思路分析&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;获取排名: &lt;code&gt;dense_rank&lt;/code&gt;相同排名, &lt;code&gt;rank&lt;/code&gt;间隔排名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lag(col, 1)&lt;/code&gt; 获取上一条 ， &lt;code&gt;lead&lt;/code&gt; 获取下(偏移量)条记录&lt;/li&gt;
&lt;li&gt;根据时间间隔 打标签， 配合 sum 实现中断过的时间分组&lt;/li&gt;
&lt;li&gt;过滤拿到结果&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="PostgreSQL" scheme="https://zhangheng18.github.io/categories/PostgreSQL/"/>
    
    
    <category term="PostgreSQL" scheme="https://zhangheng18.github.io/tags/PostgreSQL/"/>
    
  </entry>
  
  <entry>
    <title>使用Docker运行Python程序指南</title>
    <link href="https://zhangheng18.github.io/2022/06/15/python-docker/"/>
    <id>https://zhangheng18.github.io/2022/06/15/python-docker/</id>
    <published>2022-06-15T10:37:13.000Z</published>
    <updated>2022-06-28T11:34:54.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Docker-简介&quot;&gt;&lt;a href=&quot;#Docker-简介&quot; class=&quot;headerlink&quot; title=&quot;Docker 简介&quot;&gt;&lt;/a&gt;Docker 简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/Docker&quot;&gt;Docker &lt;/a&gt;在 2013 年 3 月 20 日发布第一个版本，使用 Go 语言开发， 利用 Linux 内核的资源隔离机制（groups， namespaces ）提供一个比虚拟机更轻量级的的容器隔离解决方案。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解决 PaaS 服务 部署发布需要繁琐的配置问题，做到 一次打包，处处运行。&lt;/strong&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://zhangheng18.github.io/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://zhangheng18.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Python模块热更新</title>
    <link href="https://zhangheng18.github.io/2022/03/17/python-reload/"/>
    <id>https://zhangheng18.github.io/2022/03/17/python-reload/</id>
    <published>2022-03-17T10:37:13.000Z</published>
    <updated>2022-03-17T12:43:56.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;项目中需要插件化机制进行解耦，统一抽象交互接口，只要符合统一接口即可做到插件的替换 ，动态更新&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Python 作为动态语言提供了很灵活的&lt;a href=&quot;https://docs.python.org/zh-cn/3/library/importlib.html&quot;&gt;importlib模块导入&lt;/a&gt;， 借此实现动态导入某模块&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus + Pushgateway + Grafana 监控 Python 内存占用</title>
    <link href="https://zhangheng18.github.io/2021/11/20/Prometheus/"/>
    <id>https://zhangheng18.github.io/2021/11/20/Prometheus/</id>
    <published>2021-11-20T10:32:30.000Z</published>
    <updated>2024-07-12T14:01:17.195Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;工作中需要了解一些历史遗留的Python程序的内存占用和CPU使用情况。经过调研选择目前主流的监控方案Prometheus,记录一些配置，接入问题。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://zhangheng18.github.io/categories/DevOps/"/>
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>前端下载文件的2种方式</title>
    <link href="https://zhangheng18.github.io/2021/08/25/filedownload/"/>
    <id>https://zhangheng18.github.io/2021/08/25/filedownload/</id>
    <published>2021-08-25T02:37:13.000Z</published>
    <updated>2021-09-04T12:37:42.000Z</updated>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;要求导出excel文件，前端触发，后端直接返回文件，  记录一下遇到的问题与方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;使用axios-blob-a标签&quot;&gt;&lt;a href=&quot;#使用axios-blob-a标签&quot; class=&quot;headerlink&quot; title=&quot;使用axios  + blob + a标签&quot;&gt;&lt;/a&gt;使用&lt;a href=&quot;https://axios-http.com/docs/intro&quot;&gt;axios&lt;/a&gt;  + &lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Blob&quot;&gt;blob&lt;/a&gt; + a标签&lt;/h2&gt;</summary>
    
    
    
    <category term="前端" scheme="https://zhangheng18.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="axios" scheme="https://zhangheng18.github.io/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>优雅的Python库-records[数据库]</title>
    <link href="https://zhangheng18.github.io/2021/04/19/python-records/"/>
    <id>https://zhangheng18.github.io/2021/04/19/python-records/</id>
    <published>2021-04-19T08:37:13.000Z</published>
    <updated>2024-07-12T14:01:33.514Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;records 是由&lt;a href=&quot;https://kenreitz.org/&quot;&gt;Ken Reitz&lt;/a&gt; 大神(requests,pipenv,tablib,maya,request-html ) 开发的，一个符合人类习惯的，简单强大的用来&lt;strong&gt;执行原生SQL&lt;/strong&gt;的库&lt;/li&gt;
&lt;li&gt;执行SQL ，并获取字典 列表结果&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Django Admin 慢查询优化</title>
    <link href="https://zhangheng18.github.io/2020/08/11/django-admin-optimization/"/>
    <id>https://zhangheng18.github.io/2020/08/11/django-admin-optimization/</id>
    <published>2020-08-11T12:00:00.000Z</published>
    <updated>2020-08-11T13:56:23.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;项目是 Django Admin 的简单的后台，有一个表大概有160万左右的数据，打开一次需要将近20s，借助django-debug-toolbar 进行优化一下。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/categories/Python/"/>
    
    
    <category term="Django" scheme="https://zhangheng18.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>如何写出整洁的Python代码 —— 异常处理 （译）</title>
    <link href="https://zhangheng18.github.io/2020/08/01/write-cleaner-python-use-exceptions/"/>
    <id>https://zhangheng18.github.io/2020/08/01/write-cleaner-python-use-exceptions/</id>
    <published>2020-08-01T12:01:00.000Z</published>
    <updated>2020-08-05T13:42:02.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文用于练习英文阅读，如有侵权，联系删除&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jeffknupp.com/blog/2013/02/06/write-cleaner-python-use-exceptions&quot;&gt;原文链接&lt;/a&gt;是&lt;strong&gt;Jeff Knupp&lt;/strong&gt;写的Write Cleaner Python: Use Exceptions&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/categories/Python/"/>
    
    
    <category term="English" scheme="https://zhangheng18.github.io/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>在Python里如何将min()和max() 与嵌套列表一起使用 （译）</title>
    <link href="https://zhangheng18.github.io/2019/10/07/python-min-max-and-nested-lists/"/>
    <id>https://zhangheng18.github.io/2019/10/07/python-min-max-and-nested-lists/</id>
    <published>2019-10-07T12:28:00.000Z</published>
    <updated>2019-10-13T08:34:20.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文用于练习英文阅读，如有侵权，联系删除&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dbader.org/blog/python-min-max-and-nested-lists&quot;&gt;原文链接&lt;/a&gt;是&lt;strong&gt;Dan Bader&lt;/strong&gt;的 How to use Python’s min() and max() with nested lists&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/categories/Python/"/>
    
    
    <category term="English" scheme="https://zhangheng18.github.io/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>Python 中的Lambda 函数:他们有什么用 （译）</title>
    <link href="https://zhangheng18.github.io/2019/09/21/python-lambda-functions/"/>
    <id>https://zhangheng18.github.io/2019/09/21/python-lambda-functions/</id>
    <published>2019-09-21T11:21:00.000Z</published>
    <updated>2019-10-08T12:37:55.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文用于练习英文阅读，如有侵权，联系删除&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://dbader.org/blog/python-lambda-functions&quot;&gt;原文链接&lt;/a&gt;是&lt;strong&gt;Dan Bader&lt;/strong&gt;的 Lambda Functions in Python: What Are They Good For?&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/categories/Python/"/>
    
    
    <category term="English" scheme="https://zhangheng18.github.io/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>揭秘 Python args 和 kwargs （译）</title>
    <link href="https://zhangheng18.github.io/2019/09/15/python-kwargs-and-args/"/>
    <id>https://zhangheng18.github.io/2019/09/15/python-kwargs-and-args/</id>
    <published>2019-09-15T07:21:00.000Z</published>
    <updated>2019-09-21T11:58:24.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文用于练习英文阅读，如有侵权，联系删除&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://realpython.com/python-kwargs-and-args/&quot;&gt;原文链接&lt;/a&gt;是&lt;strong&gt;Davide Mastromatteo&lt;/strong&gt;Python args and kwargs: Demystified&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/categories/Python/"/>
    
    
    <category term="English" scheme="https://zhangheng18.github.io/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>分析Python程序性能 （译）</title>
    <link href="https://zhangheng18.github.io/2019/09/07/custom-python-profiler/"/>
    <id>https://zhangheng18.github.io/2019/09/07/custom-python-profiler/</id>
    <published>2019-09-07T05:21:00.000Z</published>
    <updated>2019-09-07T09:04:47.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文用于练习英文阅读，如有侵权，联系删除&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pythonspeed.com/articles/custom-python-profiler/&quot;&gt;原文链接&lt;/a&gt;是&lt;strong&gt;Itamar Turner-Trauring&lt;/strong&gt;写的Not just CPU:writing custom profilers for Python&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://zhangheng18.github.io/categories/Python/"/>
    
    
    <category term="English" scheme="https://zhangheng18.github.io/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 8.0.16 安装配置(Arch Linux)</title>
    <link href="https://zhangheng18.github.io/2019/07/06/mysql8/"/>
    <id>https://zhangheng18.github.io/2019/07/06/mysql8/</id>
    <published>2019-07-06T06:58:42.000Z</published>
    <updated>2019-07-07T02:45:36.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;MySQL与MariaDB&quot;&gt;&lt;a href=&quot;#MySQL与MariaDB&quot; class=&quot;headerlink&quot; title=&quot;MySQL与MariaDB&quot;&gt;&lt;/a&gt;MySQL与MariaDB&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/MariaDB&quot;&gt;MariaDB&lt;/a&gt; 是 MySQL 的一个分支，主要由开源社区在维护，采用GPL授权许可。开发这个分支的原因之一是：甲骨文公司收购了MySQL后，有将MySQL闭源的潜在风险，因此社区采用分支的方式来避开这个风险。所以现在主流的 Linux 发行版基本都默认使用 MariaDB 作为默认的 MySQL 实现。ArchLinux 已经将Oracle的MySQL移至&lt;a href=&quot;https://aur.archlinux.org/packages/mysql/&quot;&gt;AUR&lt;/a&gt; 中。&lt;/p&gt;</summary>
    
    
    
    
    <category term="MySQL" scheme="https://zhangheng18.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 189：旋转数组[初级]</title>
    <link href="https://zhangheng18.github.io/2018/08/07/leetcode-189/"/>
    <id>https://zhangheng18.github.io/2018/08/07/leetcode-189/</id>
    <published>2018-08-07T08:28:20.000Z</published>
    <updated>2024-07-12T13:57:14.790Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/rotate-array/description/&quot;&gt;189：旋转数组&lt;/a&gt;&lt;br&gt;        给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。&lt;/p&gt;</summary>
    
    
    
    
    <category term="LeetCode" scheme="https://zhangheng18.github.io/tags/LeetCode/"/>
    
  </entry>
  
</feed>
